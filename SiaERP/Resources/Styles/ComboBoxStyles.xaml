<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    
    <!-- Textbox of editable ComboBox Styles -->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <!-- Control appearance properties -->
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="{StaticResource ClrSurface}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BdrSize}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClrBorder}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <!-- Font properties -->
        <Setter Property="Foreground" Value="{StaticResource ClrFntPrimary}"/>
        <Setter Property="FontFamily" Value="{StaticResource FntSecondary}"/>
        <Setter Property="FontSize" Value="{StaticResource FntMaxSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="{StaticResource CtrlMinMargin}"/>

        <!-- Control behavior properties -->
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="False"/>

        <!-- Draw textbox and their components -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4 0 0 4">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      SnapsToDevicePixels="True"
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"
                                      Focusable="false"/>
                    </Border>

                    <!-- Define control triggers -->
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsReadOnly" Value="False"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="BorderBrush" Value="{StaticResource ClrOnBorder}"/>
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ClrOnPrimary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox toggle button styles -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>

        <!-- Draw text of control -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border SnapsToDevicePixels="true"
                            x:Name="TriggerContainer"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{StaticResource BrdRadius}">
                        <Border SnapsToDevicePixels="true"
                                x:Name="DropMenuButton"
                                HorizontalAlignment="Right"
                                Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}">
                            <Path x:Name="Arrow"
                                  Data="{StaticResource ToggleArrow}" 
                                  Fill="{StaticResource ClrBorder}"
                                  Stretch="Uniform"
                                  Margin="8"/>
                        </Border>
                    </Border>

                    <!-- Define control triggers -->
                    <ControlTemplate.Triggers>
                        <!-- ComboBox disable -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="TriggerContainer" Property="Background" Value="Transparent"/>
                        </MultiDataTrigger>

                        <!-- ComboBox disable and mouse is over -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="TriggerContainer" Property="BorderBrush" Value="{StaticResource ClrOnBorder}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ClrOnBorder}"/>
                        </MultiDataTrigger>

                        <!-- Editable ComboBox enable -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="TriggerContainer" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="DropMenuButton" Property="CornerRadius" Value="0 4 4 0"/>
                            <Setter TargetName="DropMenuButton" Property="Background" Value="{StaticResource ClrPrimary}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                            <Setter TargetName="Arrow" Property="Margin" Value="10"/>
                        </MultiDataTrigger>

                        <!-- Editable ComboBox mouse is over -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="TriggerContainer" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="DropMenuButton" Property="CornerRadius" Value="0 4 4 0"/>
                            <Setter TargetName="DropMenuButton" Property="Background" Value="{StaticResource ClrOnPrimary}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                            <Setter TargetName="Arrow" Property="Margin" Value="10"/>
                        </MultiDataTrigger>

                        <!-- Editable ComboBox disable -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="TriggerContainer" Property="BorderThickness" Value="0 2 2 2"/>
                            <Setter TargetName="TriggerContainer" Property="BorderBrush" Value="{StaticResource ClrBorder}"/>
                            <Setter TargetName="TriggerContainer" Property="CornerRadius" Value="0 4 4 0"/>
                            <Setter TargetName="DropMenuButton" Property="Background" Value="Transparent"/>
                        </MultiDataTrigger>
                        
                        <!-- Flip arrow when droping the menu -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox control template -->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid SnapsToDevicePixels="true"
              x:Name="TriggerContainer">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>

            <!-- Control to show popup content -->
            <Popup SnapsToDevicePixels="True" 
                   Grid.ColumnSpan="2"
                   x:Name="PART_Popup"
                   Placement="Bottom"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                   PopupAnimation="Slide"
                   Margin="1">

                <!-- Draw shadow of popup control -->
                <theme:SystemDropShadowChrome
                    x:Name="Shadow"
                    Color="Transparent"
                    Width="{Binding ActualWidth, ElementName=TriggerContainer}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <!-- Define the area of popup menu -->
                    <Border SnapsToDevicePixels="True"
                            x:Name="PopupContainer"
                            Background="{StaticResource ClrSurface}"
                            BorderThickness="0"
                            BorderBrush="Transparent"
                            CornerRadius="{StaticResource BrdRadius}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <!-- Draw items of popup container -->
                                <ItemsPresenter SnapsToDevicePixels="True"
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>

            <!-- Toggle button to drop menu of combobox -->
            <ToggleButton Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}"/>

            <!-- Draw text of content -->
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="false"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>

        <!-- Define control triggers -->
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shadow" Value="#71000000"/>
            </Trigger>
            
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="PopupContainer" Value="95"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Editable ComboBox control template -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid SnapsToDevicePixels="true"
              x:Name="TriggerContainer">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Control to show popup content -->
            <Popup SnapsToDevicePixels="True" 
                   Grid.ColumnSpan="2"
                   x:Name="PART_Popup"
                   Placement="Bottom"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                   PopupAnimation="Slide">
                <!-- Draw shadow of popup control -->
                <theme:SystemDropShadowChrome 
                    x:Name="Shadow"
                    Color="Transparent"
                    Width="{Binding ActualWidth, ElementName=TriggerContainer}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <!-- Define the area of popup menu -->
                    <Border SnapsToDevicePixels="True"
                            x:Name="PopupContainer"
                            Background="{StaticResource ClrSurface}"
                            BorderThickness="0"
                            BorderBrush="Transparent"
                            CornerRadius="{StaticResource BrdRadius}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <!-- Draw items of popup container -->
                                <ItemsPresenter SnapsToDevicePixels="True"
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>

            <!-- Draw button to drop menu of combobox -->
            <ToggleButton Grid.Column="1"
                          Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}"/>

            <!-- Draw textbox for edit the text -->
            <Border>
                <TextBox x:Name="PART_EditableTextBox"
                         Foreground="{TemplateBinding Foreground}"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         Style="{StaticResource ComboBoxEditableTextBox}"/>
            </Border>
        </Grid>

        <!-- Define control triggers -->
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>

            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shadow" Value="#71000000"/>
            </Trigger>

            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="PopupContainer" Value="95"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ComboBox item styles -->
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <!-- Control appearance properties -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="Foreground" Value="{StaticResource ClrFntPrimary}"/>

        <!-- Control behavior properties -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <!-- Draw control components -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{StaticResource BrdRadius}">

                        <ContentPresenter SnapsToDevicePixels="True"/>
                    </Border>

                    <!-- Define control triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ClrFntSecondary}"/>
                            <Setter Property="Background" Value="{StaticResource ClrSecondary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox styles -->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <!-- Control appearance properties -->
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Background" Value="{StaticResource ClrSurface}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BdrSize}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClrBorder}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8 0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>

        <!-- Font properties -->
        <Setter Property="Foreground" Value="{StaticResource ClrFntPrimary}"/>
        <Setter Property="FontFamily" Value="{StaticResource FntSecondary}"/>
        <Setter Property="FontSize" Value="{StaticResource FntMaxSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>

        <!-- Control behavior properties -->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>

        <!-- Draw control components -->
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>

        <!-- Define control triggers -->
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>