<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Show Menu Style -->
    <Style x:Key="ShowMenuStyles" TargetType="{x:Type ToggleButton}">
        <!-- Control appearance properties -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>

        <!-- Behaviors properties -->
        <Setter Property="Cursor" Value="Hand"/>

        <!-- Draw control components -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{StaticResource BrdRadius}">

                        <ContentPresenter SnapsToDevicePixels="True"/>
                    </Border>

                    <!-- Define button triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ClrOnPrimary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tabcontrol Collapse button styles -->
    <Style x:Key="TabControlCollapseButtonStyle" TargetType="{x:Type ToggleButton}">
        <!-- Control appearance properties -->
        <Setter Property="Background" Value="{StaticResource ClrPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource ClrBorder}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <!-- Draw control components -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid SnapsToDevicePixels="True">
                        <!-- Draw check mark of control -->
                        <Border x:Name="CheckContainer" 
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                CornerRadius="4">

                            <!-- Draw check icon on container -->
                            <Grid x:Name="Arrow">
                                <Path Data="{StaticResource ToggleArrow}"
                                      Fill="White"
                                      Stretch="Uniform"
                                      Margin="{StaticResource CtrlMaxMargin}">
                                    <Path.LayoutTransform>
                                        <RotateTransform Angle="-90"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>

                    <!-- Define control triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ClrOnPrimary}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>